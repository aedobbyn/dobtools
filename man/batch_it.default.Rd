% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch_it.R
\name{batch_it.default}
\alias{batch_it.default}
\title{Execute a function in batches}
\usage{
\method{batch_it}{default}(inp, fun, fun_2 = NULL, n_batches,
  grow_full_output = TRUE, verbose = TRUE, ...)
}
\arguments{
\item{inp}{(vector, dataframe) A vector or dataframe of inputs.}

\item{fun}{(function) A function to apply to the input.}

\item{fun_2}{(function) Optional secondary function to apply to the result of fun(inp), conditional upon its successful execution.}

\item{n_batches}{(integer) Number of batches to split inp into.}

\item{grow_full_output}{(boolean) Should the result of each batch be combined with the ones before it and the whole result returned at the end?}

\item{verbose}{(boolean) Should progress be messaged?}

\item{...}{Further arguments.}
}
\value{
A dataframe or vector, depending on the type of inp.
}
\description{
In the vector method, attempts to apply fun to inp that result in an error will return NAs for that batch.
However, in the dataframe method, these will be returned as NULLs and not applied to the output.
}
\examples{

add_one <- function(tbl) {
  tbl \%>\% purrr::map_dbl(~.x + 1)
}
batch_it(mtcars$mpg, fun = add_one, n_batches = 3)

print_it <- function(tbl) {
  tbl \%>\% purrr::map_dbl(~ print(.x))
}
# Print the result of each batch, but don't return the full output at the end
batch_it(mtcars$mpg, fun = add_one, fun_2 = print_it, n_batches = 8, grow_full_output = FALSE)

add_one_tbl <- function(tbl) {
  tbl \%>\% purrr::map_dfr(~.x + 1)
}
batch_it(mtcars, add_one_tbl, n_batches = 5)

}
